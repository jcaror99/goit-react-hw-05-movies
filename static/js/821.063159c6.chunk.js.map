{"version":3,"file":"static/js/821.063159c6.chunk.js","mappings":"sPAEMA,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELC,EAAAA,EAAAA,IAAa,SAADC,OACxBN,EAAO,mCAChB,KAAD,EAFa,OAARC,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAGPP,EAASQ,KAAKC,SAAO,OAEmB,MAFnBR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAE5BU,QAAQC,MAAM,yBAAwBX,EAAAS,IAChC,IAAIG,MAAM,0BAA0B,KAAD,oBAAAZ,EAAAa,OAAA,GAAAhB,EAAA,kBAE5C,gBAVeiB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,K,SCmChB,EAjCgB,WACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACRE,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAW,eAAA/B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMoB,GAAQ,IAAAlB,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEPT,EAAWwB,GAAU,KAAD,EAArClB,EAAQC,EAAAK,KACdK,QAAQgB,IAAI3B,GACZyB,EAAUzB,GAAUC,EAAAE,KAAA,gBAE2B,MAF3BF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEpBU,QAAQC,MAAM,yBAAwBX,EAAAS,IAChC,IAAIG,MAAM,0BAA0B,KAAD,oBAAAZ,EAAAa,OAAA,GAAAhB,EAAA,kBAE5C,gBATgBiB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAejB,OAJAW,EAAAA,EAAAA,YAAU,WACRF,EAAYR,EACd,GAAG,CAACA,KAGFW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGN,EAAOO,KAAI,SAAAC,GAAO,OACjBC,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAA,WAAAzB,OAAgB2B,EAAQE,WACxBL,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAQG,YAFLH,EAAQI,GAGZ,OAKhB,C,0DCjCMhC,E,OAAWiC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,CACPC,OAAQ,mBACRC,cACE,+N","sources":["services/getReviews.js","components/Reviews/Reviews.jsx","services/setting.js"],"sourcesContent":["import { instance } from './setting';\n\nconst getReviews = async idMovie => {\n  try {\n    const response = await instance.get(\n      `movie/${idMovie}/reviews?language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching review:', error);\n    throw new Error('Failed to fetch review');\n  }\n};\n\nexport { getReviews };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from './../../services/getReviews';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [review, setReview] = useState([]);\n\n  const fetchReview = async moviesId => {\n    try {\n      const response = await getReviews(moviesId);\n      console.log(response);\n      setReview(response);\n    } catch (error) {\n      console.error('Error fetching review:', error);\n      throw new Error('Failed to fetch review');\n    }\n  };\n\n  useEffect(() => {\n    fetchReview(moviesId);\n  }, [moviesId]);\n\n  return (\n    <div>\n      <ul>\n        {review.map(element => (\n          <div key={element.id}>\n            <h3>{`Author: ${element.author}`}</h3>\n            <li>{element.content}</li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjNmVmZjlkMDk3ZWY5OWI4MzY3ZTJkMDY1NzVmMjZiOCIsInN1YiI6IjY1MzlhYjNkMjRmMmNlMDEzOTBmOWU1NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MgqO6vuao29-Y8qbjGSQ68L0X7WzB_O9jSrh0BC_P1g',\n  },\n});\n\nexport { instance };\n"],"names":["getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","idMovie","response","_context","prev","next","instance","concat","sent","abrupt","data","results","t0","console","error","Error","stop","_x","apply","arguments","moviesId","useParams","_useState","useState","_useState2","_slicedToArray","review","setReview","fetchReview","log","useEffect","_jsx","children","map","element","_jsxs","author","content","id","axios","baseURL","headers","accept","Authorization"],"sourceRoot":""}